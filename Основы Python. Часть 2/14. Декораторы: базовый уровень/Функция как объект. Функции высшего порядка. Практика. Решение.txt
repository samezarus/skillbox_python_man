# Задача 1. Функции
#
# Дана функция func_1, которая принимает число и возвращает результат его сложения с числом 10:
#
#
#
# def func_1(x):
#
#     return x + 10
#
#
#
# Реализуйте функцию высшего порядка func_2, которая будет возвращать перемножение двух результатов переданной функции.
#
# Пример основного кода:
#
# print(func_2(func_1, 9))
#
#
#
# Результат: 361.
#
#
#

def func_1(x):
    return x + 10


def func_2(func, number):
    return func(number) * func(number)


print(func_2(func_1, 9))

# Задача 2. Таймер
#
# Вы работаете в отделе тестирования, и вам поручили с помощью различных функций замерить
# скорость передачи данных на нескольких десятках сайтов. Конечно же, вручную «щёлкать» сайты и замерять время вам было лень,
# поэтому возникла идея написать «автотест», который всё сделает сам.
#
# С помощью понятия функции высшего порядка реализуйте функцию-таймер,
# которая замеряет время работы переданной функции func и выдаёт ответ на экран.
#
# Проверьте работу таймера на какой-нибудь «тяжеловесной» функции.

import time


def timer(func):
    start = time.time()
    func()
    end = time.time()
    return end - start


def hard_func():
    return [x ** 2 ** x for x in range(22)]


print(timer(hard_func))
