# Задача 1. Сэндвич
#
# Есть функция, которая выводит начинку сэндвича. Сверху и снизу от начинки идут различные ингредиенты вроде салата, помидоров и других.
# Всё это в свою очередь содержится между двух половинок булочки.
# Реализуйте такую функцию и два соответствующих декоратора — ингредиенты и хлеб.
#
# Пример результата работы программы при вызове функции sandwich:
#
# </----------\>
# #помидоры#
# --ветчина--
# ~салат~
# <\______/>
#
#
#

def get_some_salad(func):
    def wrap_that_salad(*args, **kwargs):
        print("#помидоры#")
        func(*args, **kwargs)
        print("~салат~")

    return wrap_that_salad


def get_some_buns(func):
    def wrap_that_buns(*args, **kwargs):
        print("</----------\>")
        func(*args, **kwargs)
        print("<\______/>")

    return wrap_that_buns


@get_some_buns
@get_some_salad
def filling_burger(filler):
    print(filler)


filling_burger("ветчина")

# Задача 2. Плагины
#
# Один проект состоит из огромного количества разнообразных функций, часть из которых используется в других проектах в качестве плагинов,
# то есть они как бы «подключаются» и создают дополнительный функционал.
#
# Реализуйте специальный декоратор, который будет «регистрировать» нужные функции как плагины и заносить их в соответствующий словарь.

plugins = {}


def go_to_plugins(func):
    plugins[func.__name__] = func
    return func


@go_to_plugins
def hello():
    print('Hello!')

print(plugins)
