# Задача 1. Паспортные данные
#
# В базе данных поликлиники хранятся паспортные данные людей. Хранение реализовано с помощью словаря,
# состоящего из пар «Серия и номер паспорта — фамилия и имя». Серия и номер — составной ключ, а фамилия и имя — составное значение.
#
#
#
# data = {
#
#     (5000, 123456): ('Иванов', 'Василий'),
#
#     (6000, 111111): ('Иванов', 'Петр'),
#
#     (7000, 222222): ('Медведев', 'Алексей'),
#
#     (8000, 333333): ('Алексеев', 'Георгий'),
#
#     (9000, 444444): ('Георгиева', 'Мария')
#
# }
#
#
#
# Реализуйте функцию, которая по номеру и серии паспорта выдаёт имя и фамилию человека.
#

data = {
    (5000, 123456): ('Иванов', 'Василий'),
    (6000, 111111): ('Иванов', 'Петр'),
    (7000, 222222): ('Медведев', 'Алексей'),
    (8000, 333333): ('Алексеев', 'Георгий'),
    (9000, 444444): ('Георгиева', 'Мария')
}

number = int(input("Введите номер паспорта: "))
series = int(input("Введите серию паспорта: "))

number_and_series = (number, series)

if number_and_series in data:
    print(data[number_and_series])
else:
    print("Такого человека нет")

# Задача 2. Контакты 2
#
# Мы уже реализовывали телефонную книгу для Степана, однако её проблема была в том,
# что туда нельзя было добавить людей с одинаковыми именами. Надо это исправить.
#
# Напишите программу, которая запрашивает у пользователя имя контакта, фамилию и номер телефона, добавляет их в словарь
# и выводит на экран текущий словарь контактов. Словарь состоит из пар «Ф. И. — телефон», где Ф. И. — это составной ключ.
# Запрос на добавление идёт бесконечно (но можно задать своё условие для завершения программы).
# Обеспечьте контроль ввода: если этот человек уже есть в словаре, то выведите соответствующее сообщение.

contacts = {}

while True:
    name = input("Введите имя: ")
    surname = input("Введите фамилию: ")
    name_n_surname = (name, surname)
    if name_n_surname not in contacts:
        contacts[name_n_surname] = int(input("Введите номер телефона: "))
    else:
        print("Такой контакт уже есть!")
    print(contacts)


