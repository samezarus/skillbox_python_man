# Задача 1. Шифр Цезаря 2
#
# Мы уже писали программу, которая шифрует строку с помощью шифра Цезаря. Напомним,
# что в таком способе шифрования каждая буква заменяется на следующую по алфавиту через K позиций по кругу.
#
# Напишите (модифицируйте) программу, которая реализует этот алгоритм шифрования.
# Не используйте конкатенацию и сделайте так, чтобы текст был в одном регистре.
#
#
#
alphabet = 'абвгдеёжзийклмнопрстуфхцчшщъыьэюя'
text = input("Введите текст: ").lower()
delta = int(input("Введите сдвиг: "))


result = []
for symbol in text:
    if symbol in alphabet:
        cipher = (alphabet.find(symbol) + delta)  % len(alphabet)
        new_symbol = alphabet[cipher]
    else:
        new_symbol = symbol
    result.append(new_symbol)
# Через list comprehension
# result = [
#     alphabet[(alphabet.find(symbol) + delta) % len(alphabet)] if symbol in alphabet
#     else symbol
#     for symbol in text
# ]

print(''.join(result))


# Задача 2. Путь к файлу
#
# Все данные сайта лежат в одном проекте. При написании кода, внутри этого проекта часто используются абсолютные пути файлов,
# которые необходимо проверять.
#
#
#
# Пользователь вводит абсолютный путь к текстовому файлу, а также проверяемые данные: диск и расширение файла.
# Напишите программу, которая проверяет корректность этого пути.
#
#
#
# Пример:
#
# Путь к файлу: C:/user/docs/folder/new_file.txt
#
# На каком диске должен лежать файл: C
#
# Требуемое расширение файла: .txt
#
# Путь корректен!
#
#
#

path = input("Путь к файлу: ")
disk = input("На каком диске должен лежать файл: ")
extension = input("Требуемое расширение файла: ")

if path.startswith(disk) and path.endswith(extension):
    print("Путь корректен!")
else:
    print("Путь некорректен!")

# Задача 3. Удаление части
#
# На вход в программу подаётся строка, состоящая из прописных и заглавных букв кириллицы. Напишите код, который проверяет,
# каких букв в строке больше, прописных или заглавных. Если заглавных букв больше,
# то сделать все буквы строки заглавными, иначе сделать все прописными.
#
# Подсказка: используйте методы islower() и/или isupper().
#
#
#
# Пример:
#
# Введите строку: ПитоН - этО хорошО
#
#
#
# Результат: питон - это хорошо
#
#
#
# Пример 2:
#
# Введите строку: ПиТоН - ЭтО УДоБнО
#
#
#
# Результат: ПИТОН - ЭТО УДОБНО

text = input("Введите текст: ")
lowers = len([letter for letter in text if letter.islower()])
uppers = len([letter for letter in text if letter.isupper()])

if lowers > uppers:
    print("Результат:", text.lower())
else:
    print("Результат:", text.upper())

