# Задача 1. Склады
#
# У мебельного магазина есть два склада, на которых хранятся разные категории товаров по парам «название — количество»:
#
#
#
# small_storage = {
#
#     'гвозди': 5000,
#
#     'шурупы': 3040,
#
#     'саморезы': 2000
#
# }
#
#
#
# big_storage = {
#
#     'доски': 1000,
#
#     'балки': 150,
#
#     'рейки': 600
#
# }
#
#
#
# Магазин решил сократить аренду и скинуть все товары в большой склад (big_storage). После этого нас попросили реализовать поиск по товарам.
#
# Напишите программу, которая объединяет оба словаря в один (в big_storage), затем запрашивает у пользователя название товара
# и выводит на экран его количество. Если такого товара нет, то выводит об этом ошибку. Для получения значения используйте метод get.
#
#
#
small_storage = {
    'гвозди': 5000,
    'шурупы': 3040,
    'саморезы': 2000
}

big_storage = {
    'доски': 1000,
    'балки': 150,
    'рейки': 600
}

big_storage.update(small_storage)

user_item = input("Введите название нужного товара: ")
if big_storage.get(user_item, None):
    print(big_storage[user_item])
else:
    print("Такого товара нет!")

# Задача 2. Кризис фруктов
#
# Мы работаем в одной небольшой торговой компании, где все данные о продажах фруктов за год сохранены
# в словаре в виде пар «название фрукта — доход»:
#
# incomes = {
#     'apple': 5600.20,
#     'orange': 3500.45,
#     'banana': 5000.00,
#     'bergamot': 3700.56,
#     'durian': 5987.23,
#     'grapefruit': 300.40,
#     'peach': 10000.50,
#     'pear': 1020.00,
#     'persimmon': 310.00,
# }
#
#
#
# В компании наступил небольшой кризис, и нам поручено провести небольшой анализ дохода.
#
# Напишите программу, которая находит общий доход, затем выводит фрукт с минимальным доходом и удаляет его из словаря.
# Выведите итоговый словарь на экран.
#
# Результат работы программы:
#
# Общий доход за год составил 35419.34 рублей
#
# Самый маленький доход у grapefruit. Он составляет 300.4 рублей
#
# Итоговый словарь:
# {'apple': 5600.2, 'orange': 3500.45, 'banana': 5000.0, 'bergamot': 3700.56, 'durian': 5987.23, 'peach': 10000.5, 'pear': 1020.0,
# 'persimmon': 310.0}
#
#
#

incomes = {
    'apple': 5600.20,
    'orange': 3500.45,
    'banana': 5000.00,
    'bergamot': 3700.56,
    'durian': 5987.23,
    'grapefruit': 300.40,
    'peach': 10000.50,
    'pear': 1020.00,
    'persimmon': 310.00,
}

result_sum = 0
min_value = None
min_name = ""
for name, value in incomes.items():  # items() позволяет сразу обратиться и к ключам, и а к значениям словаря
    result_sum += value
    if min_value is None or min_value > value:
        min_value = value
        min_name = name

incomes.pop(min_name)

print(f"Общий доход за год составил {result_sum} рублей")
print(f"Самый маленький доход у {min_name}. Он составляет {min_value} рублей")
print("Итоговый словарь:", incomes)

# Вариант решения с "магией":
incomes = {
    'apple': 5600.20,
    'orange': 3500.45,
    'banana': 5000.00,
    'bergamot': 3700.56,
    'durian': 5987.23,
    'grapefruit': 300.40,
    'peach': 10000.50,
    'pear': 1020.00,
    'persimmon': 310.00,
}


def get_value(x):
    return x[1]


result_sum = sum(incomes.values())
min_name, min_value = min(incomes.items(), key=get_value)
# При помощи функции и параметра key мы говорим пайтону как именно надо сравнивать между собой элементы
# Т.к. элементы записаны в таком виде - ('apple': 5600.20), а сравнивать мы хотим по значениям - то нам проосто надо брать для сравнения
# элементы под индексом 1 (если бы сравнивали по ключам, то индекс надо было бы заменить на 0)
print(result_sum, min_name, min_value)

# Задача 3. Гистограмма частоты
#
# Лингвистам нужно собрать данные о частоте букв в тексте, исходя из этих данных будет строиться гистограмма частоты букв.
#
# Напишите программу, которая получает сам текст и считает, сколько раз в строке встречается каждый символ.
# На экран нужно вывести содержимое в виде таблицы, отсортированное по алфавиту, а также максимальное значение частоты.
#
#
#
# Пример:
#
# Введите текст: Здесь что-то написано
#
#   : 2
# - : 1
# З : 1
# а : 2
# д : 1
# е : 1
# и : 1
# н : 2
# о : 3
# п : 1
# с : 2
# т : 2
# ч : 1
# ь : 1
# Максимальная частота: 3

text = input("Введите текст: ")

frequency = {}
for symbol in text:
    if symbol in frequency:
        frequency[symbol] += 1
    else:
        frequency[symbol] = 1

for letter, freq in frequency.items():
    print(letter, ':', freq)

print("Максимальная частота: ", max(frequency.values()))