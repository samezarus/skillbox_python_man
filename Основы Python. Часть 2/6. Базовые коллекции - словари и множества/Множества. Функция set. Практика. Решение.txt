# Задача 1. Пунктуация
#
# Напишите программу, которая считает количество уникальных знаков пунктуации в символьной строке.
# К знакам пунктуации относятся символы из набора ".,;:!?". Набор должен храниться в виде множества.
#
#
# Пример:
#
# Введите строку: Я! Есть. Грут?! Я, Грут и Есть.
#
#
# Количество знаков пунктуации: 4
#
#

user_input = set(input("Введите строку: "))
symbols = set(".,;:!?")
print("Количество знаков пунктуации:", len(user_input.intersection(symbols)))


# Задача 2. Семинар
#
# На одном семинаре по теории множеств нужно показать наглядный пример, как эти множества работают.
# Для начала было сгенерировано два набора чисел:
#
#
#
# nums_1 = [29, 17, 10, 15, 13, 22, 12, 22, 7, 24, 26, 3, 11, 2, 3, 16, 19, 21, 2, 3, 8, 27, 2, 17, 2, 20, 12, 21, 3, 1]
#
# nums_2 = [16, 21, 30, 24, 5, 7, 23, 13, 11, 5, 21, 5, 19, 9, 12, 9, 15, 16, 29, 8, 16, 1, 22, 15, 16, 9, 1, 13, 21, 21]
#
#
#
# Вас попросили написать программу, которая будет наглядно демонстрировать работу со множествами с помощью этих чисел.
#
#
#
# Напишите программу, которая преобразует списки во множества и убирает повторяющиеся элементы.
# Затем удаляет минимальный элемент из каждого множества и добавляет туда случайное число в диапазоне от 100 до 200. Затем выполните
# следующие действия со множествами:
#
# Вывести все элементы множеств (объединение).
# Вывести только общие элементы (пересечение).
# Вывести элементы, входящие в nums_2, но не входящие в nums_1.
#
#
# Пример результата:
#
# 1-е множество: {1, 2, 3, 7, 8, 10, 11, 12, 13, 15, 16, 17, 19, 20, 21, 22, 24, 26, 27, 29}
#
# 2-е множество: {1, 5, 7, 8, 9, 11, 12, 13, 15, 16, 19, 21, 22, 23, 24, 29, 30}
#
#
#
# Минимальный элемент 1-го множества: 1
#
# Минимальный элемент 2-го множества: 1
#
#
#
# Случайное число для 1-го множества: 126
#
# Случайное число для 2-го множества: 169
#
#
#
# Объединение множеств: {2, 3, 5, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 19, 20, 21, 22, 23, 24, 26, 27, 29, 30, 169, 126}
#
# Пересечение множеств: {7, 8, 11, 12, 13, 15, 16, 19, 21, 22, 24, 29}
#
# Элементы, входящие в nums_2, но не входящие в nums_1: {5, 9, 169, 23, 30}
#
#
#
import random

nums_1 = [29, 17, 10, 15, 13, 22, 12, 22, 7, 24, 26, 3, 11, 2, 3, 16, 19, 21, 2, 3, 8, 27, 2, 17, 2, 20, 12, 21, 3, 1]

nums_2 = [16, 21, 30, 24, 5, 7, 23, 13, 11, 5, 21, 5, 19, 9, 12, 9, 15, 16, 29, 8, 16, 1, 22, 15, 16, 9, 1, 13, 21, 21]
# Напишите программу,
# 1) которая преобразует списки во множества и убирает повторяющиеся элементы.

nums_set_1 = set(nums_1)
nums_set_2 = set(nums_2)
print(nums_set_1, nums_set_2)
# 2) Затем удаляет минимальный элемент из каждого множества

nums_set_1.discard(min(nums_set_1))
nums_set_2.discard(min(nums_set_2))
print(nums_set_1, nums_set_2)

# 3) и добавляет туда случайное число в диапазоне от 100 до 200.
nums_set_1.add(random.randint(100, 200))
nums_set_2.add(random.randint(100, 200))
print(nums_set_1, nums_set_2)

# Затем выполните
# следующие действия со множествами:
#
# 4) Вывести все элементы множеств (объединение).
print(nums_set_1 | nums_set_2)
# 5) Вывести только общие элементы (пересечение).
print(nums_set_1 & nums_set_2)
# 6) Вывести элементы, входящие в nums_2, но не входящие в nums_1.
print(nums_set_2 - nums_set_1)

# Задача 3. Различные цифры
#
# Напишите программу, которая находит все различные цифры в символьной строке. Для решения используйте множество
# (цифры будут различные, и поиск во множестве намного быстрее, чем в списке).
#
#
#
# Подсказка: можно использовать вот такое сравнение '0'<=x<='9'
#
#
#
# Пример:
#
# Введите строку: ab1n32kz2
#
# Различные цифры строки: 123

text = input("Введите строку: ")
text_unique = set(text)
result = text_unique & set("0123456789")
# При помощи множества выделим из строки только общие элементы (цифры) и посчитаем длину множества
print(''.join(result))

# Решение через цикл и сравнение:
new_result = set()
for symbol in text:
    if '0' <= symbol <= '9':
        new_result.add(symbol)

print(''.join(new_result))